{
  "version": 3,
  "sources": ["../../../../../node_modules/@zxing/browser/esm/common/HTMLCanvasElementLuminanceSource.js", "../../../../../node_modules/@zxing/browser/esm/common/navigator-utils.js", "../../../../../node_modules/@zxing/browser/esm/readers/BrowserCodeReader.js", "../../../../../node_modules/@zxing/browser/esm/readers/BrowserAztecCodeReader.js", "../../../../../node_modules/@zxing/browser/esm/readers/BrowserMultiFormatOneDReader.js", "../../../../../node_modules/@zxing/browser/esm/readers/BrowserDatamatrixCodeReader.js", "../../../../../node_modules/@zxing/browser/esm/readers/BrowserMultiFormatReader.js", "../../../../../node_modules/@zxing/browser/esm/readers/BrowserPDF417Reader.js", "../../../../../node_modules/@zxing/browser/esm/readers/BrowserQRCodeReader.js", "../../../../../node_modules/@zxing/browser/esm/writers/BrowserCodeSvgWriter.js", "../../../../../node_modules/@zxing/browser/esm/writers/BrowserQRCodeSvgWriter.js", "../../../../../node_modules/@zxing/ngx-scanner/fesm2022/zxing-ngx-scanner.mjs"],
  "sourcesContent": ["var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nimport { IllegalArgumentException, InvertedLuminanceSource, LuminanceSource, } from '@zxing/library';\r\n/**/\r\nvar HTMLCanvasElementLuminanceSource = /** @class */ (function (_super) {\r\n    __extends(HTMLCanvasElementLuminanceSource, _super);\r\n    function HTMLCanvasElementLuminanceSource(canvas) {\r\n        var _this = _super.call(this, canvas.width, canvas.height) || this;\r\n        _this.canvas = canvas;\r\n        _this.tempCanvasElement = null;\r\n        _this.buffer = HTMLCanvasElementLuminanceSource.makeBufferFromCanvasImageData(canvas);\r\n        return _this;\r\n    }\r\n    HTMLCanvasElementLuminanceSource.makeBufferFromCanvasImageData = function (canvas) {\r\n        var canvasCtx = canvas.getContext('2d');\r\n        if (!canvasCtx) {\r\n            throw new Error('Couldn\\'t get canvas context.');\r\n        }\r\n        var imageData = canvasCtx.getImageData(0, 0, canvas.width, canvas.height);\r\n        return HTMLCanvasElementLuminanceSource.toGrayscaleBuffer(imageData.data, canvas.width, canvas.height);\r\n    };\r\n    HTMLCanvasElementLuminanceSource.toGrayscaleBuffer = function (imageBuffer, width, height) {\r\n        var grayscaleBuffer = new Uint8ClampedArray(width * height);\r\n        for (var i = 0, j = 0, length_1 = imageBuffer.length; i < length_1; i += 4, j++) {\r\n            var gray = void 0;\r\n            var alpha = imageBuffer[i + 3];\r\n            // The color of fully-transparent pixels is irrelevant. They are often, technically, fully-transparent\r\n            // black (0 alpha, and then 0 RGB). They are often used, of course as the \"white\" area in a\r\n            // barcode image. Force any such pixel to be white:\r\n            if (alpha === 0) {\r\n                gray = 0xFF;\r\n            }\r\n            else {\r\n                var pixelR = imageBuffer[i];\r\n                var pixelG = imageBuffer[i + 1];\r\n                var pixelB = imageBuffer[i + 2];\r\n                // .299R + 0.587G + 0.114B (YUV/YIQ for PAL and NTSC),\r\n                // (306*R) >> 10 is approximately equal to R*0.299, and so on.\r\n                // 0x200 >> 10 is 0.5, it implements rounding.\r\n                // tslint:disable-next-line:no-bitwise\r\n                gray = (306 * pixelR + 601 * pixelG + 117 * pixelB + 0x200) >> 10;\r\n            }\r\n            grayscaleBuffer[j] = gray;\r\n        }\r\n        return grayscaleBuffer;\r\n    };\r\n    HTMLCanvasElementLuminanceSource.prototype.getRow = function (y /*int*/, row) {\r\n        if (y < 0 || y >= this.getHeight()) {\r\n            throw new IllegalArgumentException('Requested row is outside the image: ' + y);\r\n        }\r\n        var width = this.getWidth();\r\n        var start = y * width;\r\n        if (row === null) {\r\n            row = this.buffer.slice(start, start + width);\r\n        }\r\n        else {\r\n            if (row.length < width) {\r\n                row = new Uint8ClampedArray(width);\r\n            }\r\n            // The underlying raster of image consists of bytes with the luminance values\r\n            // TODO: can avoid set/slice?\r\n            row.set(this.buffer.slice(start, start + width));\r\n        }\r\n        return row;\r\n    };\r\n    HTMLCanvasElementLuminanceSource.prototype.getMatrix = function () {\r\n        return this.buffer;\r\n    };\r\n    HTMLCanvasElementLuminanceSource.prototype.isCropSupported = function () {\r\n        return true;\r\n    };\r\n    HTMLCanvasElementLuminanceSource.prototype.crop = function (left /*int*/, top /*int*/, width /*int*/, height /*int*/) {\r\n        _super.prototype.crop.call(this, left, top, width, height);\r\n        return this;\r\n    };\r\n    /**\r\n     * This is always true, since the image is a gray-scale image.\r\n     *\r\n     * @return true\r\n     */\r\n    HTMLCanvasElementLuminanceSource.prototype.isRotateSupported = function () {\r\n        return true;\r\n    };\r\n    HTMLCanvasElementLuminanceSource.prototype.rotateCounterClockwise = function () {\r\n        this.rotate(-90);\r\n        return this;\r\n    };\r\n    HTMLCanvasElementLuminanceSource.prototype.rotateCounterClockwise45 = function () {\r\n        this.rotate(-45);\r\n        return this;\r\n    };\r\n    HTMLCanvasElementLuminanceSource.prototype.invert = function () {\r\n        return new InvertedLuminanceSource(this);\r\n    };\r\n    HTMLCanvasElementLuminanceSource.prototype.getTempCanvasElement = function () {\r\n        if (null === this.tempCanvasElement) {\r\n            var tempCanvasElement = this.canvas.ownerDocument.createElement('canvas');\r\n            tempCanvasElement.width = this.canvas.width;\r\n            tempCanvasElement.height = this.canvas.height;\r\n            this.tempCanvasElement = tempCanvasElement;\r\n        }\r\n        return this.tempCanvasElement;\r\n    };\r\n    HTMLCanvasElementLuminanceSource.prototype.rotate = function (angle) {\r\n        var tempCanvasElement = this.getTempCanvasElement();\r\n        if (!tempCanvasElement) {\r\n            throw new Error('Could not create a Canvas element.');\r\n        }\r\n        var angleRadians = angle * HTMLCanvasElementLuminanceSource.DEGREE_TO_RADIANS;\r\n        // Calculate and set new dimensions for temp canvas\r\n        var width = this.canvas.width;\r\n        var height = this.canvas.height;\r\n        var newWidth = Math.ceil(Math.abs(Math.cos(angleRadians)) * width + Math.abs(Math.sin(angleRadians)) * height);\r\n        var newHeight = Math.ceil(Math.abs(Math.sin(angleRadians)) * width + Math.abs(Math.cos(angleRadians)) * height);\r\n        tempCanvasElement.width = newWidth;\r\n        tempCanvasElement.height = newHeight;\r\n        var tempContext = tempCanvasElement.getContext('2d');\r\n        if (!tempContext) {\r\n            throw new Error('Could not create a Canvas Context element.');\r\n        }\r\n        // Draw at center of temp canvas to prevent clipping of image data\r\n        tempContext.translate(newWidth / 2, newHeight / 2);\r\n        tempContext.rotate(angleRadians);\r\n        tempContext.drawImage(this.canvas, width / -2, height / -2);\r\n        this.buffer = HTMLCanvasElementLuminanceSource.makeBufferFromCanvasImageData(tempCanvasElement);\r\n        return this;\r\n    };\r\n    HTMLCanvasElementLuminanceSource.DEGREE_TO_RADIANS = Math.PI / 180;\r\n    return HTMLCanvasElementLuminanceSource;\r\n}(LuminanceSource));\r\nexport { HTMLCanvasElementLuminanceSource };\r\n", "/**\r\n * If navigator is present.\r\n */\r\nexport function hasNavigator() {\r\n    return typeof navigator !== 'undefined';\r\n}\r\n/**\r\n * If mediaDevices under navigator is supported.\r\n */\r\nfunction isMediaDevicesSupported() {\r\n    return hasNavigator() && !!navigator.mediaDevices;\r\n}\r\n/**\r\n * If enumerateDevices under navigator is supported.\r\n */\r\nexport function canEnumerateDevices() {\r\n    return !!(isMediaDevicesSupported() && navigator.mediaDevices.enumerateDevices);\r\n}\r\n", "var __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nvar __values = (this && this.__values) || function(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n};\r\nimport { ArgumentException, BinaryBitmap, ChecksumException, DecodeHintType, FormatException, HybridBinarizer, NotFoundException, } from '@zxing/library';\r\nimport { HTMLCanvasElementLuminanceSource } from '../common/HTMLCanvasElementLuminanceSource';\r\nimport { canEnumerateDevices, hasNavigator } from '../common/navigator-utils';\r\nvar defaultOptions = {\r\n    delayBetweenScanAttempts: 500,\r\n    delayBetweenScanSuccess: 500,\r\n    tryPlayVideoTimeout: 5000,\r\n};\r\n/**\r\n * Base class for browser code reader.\r\n */\r\nvar BrowserCodeReader = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of BrowserCodeReader.\r\n     * @param {Reader} reader The reader instance to decode the barcode\r\n     * @param hints Holds the hints the user sets for the Reader.\r\n     */\r\n    function BrowserCodeReader(reader, hints, options) {\r\n        if (hints === void 0) { hints = new Map(); }\r\n        if (options === void 0) { options = {}; }\r\n        this.reader = reader;\r\n        this.hints = hints;\r\n        this.options = __assign(__assign({}, defaultOptions), options);\r\n    }\r\n    Object.defineProperty(BrowserCodeReader.prototype, \"possibleFormats\", {\r\n        /**\r\n         * Allows to change the possible formats the decoder should\r\n         * search for while scanning some image. Useful for changing\r\n         * the possible formats during BrowserCodeReader::scan.\r\n         */\r\n        set: function (formats) {\r\n            this.hints.set(DecodeHintType.POSSIBLE_FORMATS, formats);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Defines what the videoElement src will be.\r\n     *\r\n     * @param videoElement\r\n     * @param stream The stream to be added as a source.\r\n     */\r\n    BrowserCodeReader.addVideoSource = function (videoElement, stream) {\r\n        // Older browsers may not have `srcObject`\r\n        try {\r\n            // @note Throws Exception if interrupted by a new loaded request\r\n            videoElement.srcObject = stream;\r\n        }\r\n        catch (err) {\r\n            console.error(\"got interrupted by new loading request\");\r\n        }\r\n    };\r\n    /**\r\n     * Enables or disables the torch in a media stream.\r\n     *\r\n     * @experimental This doesn't work across all browsers and is still a Draft.\r\n     */\r\n    BrowserCodeReader.mediaStreamSetTorch = function (track, onOff) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, track.applyConstraints({\r\n                            advanced: [{\r\n                                    fillLightMode: onOff ? 'flash' : 'off',\r\n                                    torch: onOff ? true : false,\r\n                                }],\r\n                        })];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Checks if the stream has torch support.\r\n     */\r\n    BrowserCodeReader.mediaStreamIsTorchCompatible = function (params) {\r\n        var e_1, _a;\r\n        var tracks = params.getVideoTracks();\r\n        try {\r\n            for (var tracks_1 = __values(tracks), tracks_1_1 = tracks_1.next(); !tracks_1_1.done; tracks_1_1 = tracks_1.next()) {\r\n                var track = tracks_1_1.value;\r\n                if (BrowserCodeReader.mediaStreamIsTorchCompatibleTrack(track)) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n        finally {\r\n            try {\r\n                if (tracks_1_1 && !tracks_1_1.done && (_a = tracks_1.return)) _a.call(tracks_1);\r\n            }\r\n            finally { if (e_1) throw e_1.error; }\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     *\r\n     * @param track The media stream track that will be checked for compatibility.\r\n     */\r\n    BrowserCodeReader.mediaStreamIsTorchCompatibleTrack = function (track) {\r\n        try {\r\n            var capabilities = track.getCapabilities();\r\n            return 'torch' in capabilities;\r\n        }\r\n        catch (err) {\r\n            // some browsers may not be compatible with ImageCapture\r\n            // so we are ignoring this for now.\r\n            // tslint:disable-next-line:no-console\r\n            console.error(err);\r\n            // tslint:disable-next-line:no-console\r\n            console.warn('Your browser may be not fully compatible with WebRTC and/or ImageCapture specs. Torch will not be available.');\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * Checks if the given video element is currently playing.\r\n     */\r\n    BrowserCodeReader.isVideoPlaying = function (video) {\r\n        return video.currentTime > 0 && !video.paused && video.readyState > 2;\r\n    };\r\n    /**\r\n     * Searches and validates a media element.\r\n     */\r\n    BrowserCodeReader.getMediaElement = function (mediaElementId, type) {\r\n        var mediaElement = document.getElementById(mediaElementId);\r\n        if (!mediaElement) {\r\n            throw new ArgumentException(\"element with id '\".concat(mediaElementId, \"' not found\"));\r\n        }\r\n        if (mediaElement.nodeName.toLowerCase() !== type.toLowerCase()) {\r\n            throw new ArgumentException(\"element with id '\".concat(mediaElementId, \"' must be an \").concat(type, \" element\"));\r\n        }\r\n        return mediaElement;\r\n    };\r\n    /**\r\n     * Receives a source and makes sure to return a Video Element from it or fail.\r\n     */\r\n    BrowserCodeReader.createVideoElement = function (videoThingy) {\r\n        if (videoThingy instanceof HTMLVideoElement) {\r\n            return videoThingy;\r\n        }\r\n        if (typeof videoThingy === 'string') {\r\n            return BrowserCodeReader.getMediaElement(videoThingy, 'video');\r\n        }\r\n        if (!videoThingy && typeof document !== 'undefined') {\r\n            var videoElement = document.createElement('video');\r\n            videoElement.width = 200;\r\n            videoElement.height = 200;\r\n            return videoElement;\r\n        }\r\n        throw new Error('Couldn\\'t get videoElement from videoSource!');\r\n    };\r\n    /**\r\n     * Receives a source and makes sure to return an Image Element from it or fail.\r\n     */\r\n    BrowserCodeReader.prepareImageElement = function (imageSource) {\r\n        if (imageSource instanceof HTMLImageElement) {\r\n            return imageSource;\r\n        }\r\n        if (typeof imageSource === 'string') {\r\n            return BrowserCodeReader.getMediaElement(imageSource, 'img');\r\n        }\r\n        if (typeof imageSource === 'undefined') {\r\n            var imageElement = document.createElement('img');\r\n            imageElement.width = 200;\r\n            imageElement.height = 200;\r\n            return imageElement;\r\n        }\r\n        throw new Error('Couldn\\'t get imageElement from imageSource!');\r\n    };\r\n    /**\r\n     * Sets a HTMLVideoElement for scanning or creates a new one.\r\n     *\r\n     * @param videoElem The HTMLVideoElement to be set.\r\n     */\r\n    BrowserCodeReader.prepareVideoElement = function (videoElem) {\r\n        var videoElement = BrowserCodeReader.createVideoElement(videoElem);\r\n        // @todo the following lines should not always be done this way, should conditionally\r\n        // change according were we created the element or not\r\n        // Needed for iOS 11\r\n        videoElement.setAttribute('autoplay', 'true');\r\n        videoElement.setAttribute('muted', 'true');\r\n        videoElement.setAttribute('playsinline', 'true');\r\n        return videoElement;\r\n    };\r\n    /**\r\n     * Checks if and HTML image is loaded.\r\n     */\r\n    BrowserCodeReader.isImageLoaded = function (img) {\r\n        // During the onload event, IE correctly identifies any images that\r\n        // weren't downloaded as not complete. Others should too. Gecko-based\r\n        // browsers act like NS4 in that they report this incorrectly.\r\n        if (!img.complete) {\r\n            return false;\r\n        }\r\n        // However, they do have two very useful properties: naturalWidth and\r\n        // naturalHeight. These give the true size of the image. If it failed\r\n        // to load, either of these should be zero.\r\n        if (img.naturalWidth === 0) {\r\n            return false;\r\n        }\r\n        // No other way of checking: assume it’s ok.\r\n        return true;\r\n    };\r\n    /**\r\n     * Creates a binaryBitmap based in a canvas.\r\n     *\r\n     * @param canvas HTML canvas element containing the image source draw.\r\n     */\r\n    BrowserCodeReader.createBinaryBitmapFromCanvas = function (canvas) {\r\n        var luminanceSource = new HTMLCanvasElementLuminanceSource(canvas);\r\n        var hybridBinarizer = new HybridBinarizer(luminanceSource);\r\n        return new BinaryBitmap(hybridBinarizer);\r\n    };\r\n    /**\r\n     * Overwriting this allows you to manipulate the snapshot image in anyway you want before decode.\r\n     */\r\n    BrowserCodeReader.drawImageOnCanvas = function (canvasElementContext, srcElement) {\r\n        canvasElementContext.drawImage(srcElement, 0, 0);\r\n    };\r\n    BrowserCodeReader.getMediaElementDimensions = function (mediaElement) {\r\n        if (mediaElement instanceof HTMLVideoElement) {\r\n            return {\r\n                height: mediaElement.videoHeight,\r\n                width: mediaElement.videoWidth,\r\n            };\r\n        }\r\n        if (mediaElement instanceof HTMLImageElement) {\r\n            return {\r\n                height: mediaElement.naturalHeight || mediaElement.height,\r\n                width: mediaElement.naturalWidth || mediaElement.width,\r\n            };\r\n        }\r\n        throw new Error('Couldn\\'t find the Source\\'s dimensions!');\r\n    };\r\n    /**\r\n     * 🖌 Prepares the canvas for capture and scan frames.\r\n     */\r\n    BrowserCodeReader.createCaptureCanvas = function (mediaElement) {\r\n        if (!mediaElement) {\r\n            throw new ArgumentException('Cannot create a capture canvas without a media element.');\r\n        }\r\n        if (typeof document === 'undefined') {\r\n            throw new Error('The page \"Document\" is undefined, make sure you\\'re running in a browser.');\r\n        }\r\n        var canvasElement = document.createElement('canvas');\r\n        var _a = BrowserCodeReader.getMediaElementDimensions(mediaElement), width = _a.width, height = _a.height;\r\n        canvasElement.style.width = width + 'px';\r\n        canvasElement.style.height = height + 'px';\r\n        canvasElement.width = width;\r\n        canvasElement.height = height;\r\n        return canvasElement;\r\n    };\r\n    /**\r\n     * Just tries to play the video and logs any errors.\r\n     * The play call is only made is the video is not already playing.\r\n     */\r\n    BrowserCodeReader.tryPlayVideo = function (videoElement) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var error_1;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (videoElement === null || videoElement === void 0 ? void 0 : videoElement.ended) {\r\n                            // tslint:disable-next-line:no-console\r\n                            console.error('Trying to play video that has ended.');\r\n                            return [2 /*return*/, false];\r\n                        }\r\n                        if (BrowserCodeReader.isVideoPlaying(videoElement)) {\r\n                            // tslint:disable-next-line:no-console\r\n                            console.warn('Trying to play video that is already playing.');\r\n                            return [2 /*return*/, true];\r\n                        }\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 3, , 4]);\r\n                        return [4 /*yield*/, videoElement.play()];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [2 /*return*/, true];\r\n                    case 3:\r\n                        error_1 = _a.sent();\r\n                        // tslint:disable-next-line:no-console\r\n                        console.warn('It was not possible to play the video.', error_1);\r\n                        return [2 /*return*/, false];\r\n                    case 4: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Creates a canvas and draws the current image frame from the media element on it.\r\n     *\r\n     * @param mediaElement HTML media element to extract an image frame from.\r\n     */\r\n    BrowserCodeReader.createCanvasFromMediaElement = function (mediaElement) {\r\n        var canvas = BrowserCodeReader.createCaptureCanvas(mediaElement);\r\n        var ctx = canvas.getContext('2d');\r\n        if (!ctx) {\r\n            throw new Error('Couldn\\'t find Canvas 2D Context.');\r\n        }\r\n        BrowserCodeReader.drawImageOnCanvas(ctx, mediaElement);\r\n        return canvas;\r\n    };\r\n    /**\r\n     * Creates a binaryBitmap based in some image source.\r\n     *\r\n     * @param mediaElement HTML element containing drawable image source.\r\n     */\r\n    BrowserCodeReader.createBinaryBitmapFromMediaElem = function (mediaElement) {\r\n        var canvas = BrowserCodeReader.createCanvasFromMediaElement(mediaElement);\r\n        return BrowserCodeReader.createBinaryBitmapFromCanvas(canvas);\r\n    };\r\n    BrowserCodeReader.destroyImageElement = function (imageElement) {\r\n        imageElement.src = '';\r\n        imageElement.removeAttribute('src');\r\n        imageElement = undefined;\r\n    };\r\n    /**\r\n     * Lists all the available video input devices.\r\n     */\r\n    BrowserCodeReader.listVideoInputDevices = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var devices, videoDevices, devices_1, devices_1_1, device, kind, deviceId, label, groupId, videoDevice;\r\n            var e_2, _a;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        if (!hasNavigator()) {\r\n                            throw new Error('Can\\'t enumerate devices, navigator is not present.');\r\n                        }\r\n                        if (!canEnumerateDevices()) {\r\n                            throw new Error('Can\\'t enumerate devices, method not supported.');\r\n                        }\r\n                        return [4 /*yield*/, navigator.mediaDevices.enumerateDevices()];\r\n                    case 1:\r\n                        devices = _b.sent();\r\n                        videoDevices = [];\r\n                        try {\r\n                            for (devices_1 = __values(devices), devices_1_1 = devices_1.next(); !devices_1_1.done; devices_1_1 = devices_1.next()) {\r\n                                device = devices_1_1.value;\r\n                                kind = device.kind === 'video' ? 'videoinput' : device.kind;\r\n                                if (kind !== 'videoinput') {\r\n                                    continue;\r\n                                }\r\n                                deviceId = device.deviceId || device.id;\r\n                                label = device.label || \"Video device \".concat(videoDevices.length + 1);\r\n                                groupId = device.groupId;\r\n                                videoDevice = { deviceId: deviceId, label: label, kind: kind, groupId: groupId };\r\n                                videoDevices.push(videoDevice);\r\n                            }\r\n                        }\r\n                        catch (e_2_1) { e_2 = { error: e_2_1 }; }\r\n                        finally {\r\n                            try {\r\n                                if (devices_1_1 && !devices_1_1.done && (_a = devices_1.return)) _a.call(devices_1);\r\n                            }\r\n                            finally { if (e_2) throw e_2.error; }\r\n                        }\r\n                        return [2 /*return*/, videoDevices];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Let's you find a device using it's Id.\r\n     */\r\n    BrowserCodeReader.findDeviceById = function (deviceId) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var devices;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, BrowserCodeReader.listVideoInputDevices()];\r\n                    case 1:\r\n                        devices = _a.sent();\r\n                        if (!devices) {\r\n                            return [2 /*return*/];\r\n                        }\r\n                        return [2 /*return*/, devices.find(function (x) { return x.deviceId === deviceId; })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Unbinds a HTML video src property.\r\n     */\r\n    BrowserCodeReader.cleanVideoSource = function (videoElement) {\r\n        if (!videoElement) {\r\n            return;\r\n        }\r\n        // forgets about that element 😢\r\n        try {\r\n            videoElement.srcObject = null;\r\n        }\r\n        catch (err) {\r\n            videoElement.src = '';\r\n        }\r\n        if (videoElement) {\r\n            videoElement.removeAttribute('src');\r\n        }\r\n    };\r\n    /**\r\n     * Stops all media streams that are created.\r\n     */\r\n    BrowserCodeReader.releaseAllStreams = function () {\r\n        if (BrowserCodeReader.streamTracker.length !== 0) {\r\n            // tslint:disable-next-line:no-console\r\n            BrowserCodeReader.streamTracker.forEach(function (mediaStream) {\r\n                mediaStream.getTracks().forEach(function (track) { return track.stop(); });\r\n            });\r\n        }\r\n        BrowserCodeReader.streamTracker = [];\r\n    };\r\n    /**\r\n     * Waits for a video to load and then hits play on it.\r\n     * To accomplish that, it binds listeners and callbacks to the video element.\r\n     *\r\n     * @param element The video element.\r\n     * @param callbackFn Callback invoked when the video is played.\r\n     */\r\n    BrowserCodeReader.playVideoOnLoadAsync = function (element, timeout) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var isPlaying;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, BrowserCodeReader.tryPlayVideo(element)];\r\n                    case 1:\r\n                        isPlaying = _a.sent();\r\n                        if (isPlaying) {\r\n                            return [2 /*return*/, true];\r\n                        }\r\n                        return [2 /*return*/, new Promise(function (resolve, reject) {\r\n                                // waits 3 seconds or rejects.\r\n                                var timeoutId = setTimeout(function () {\r\n                                    if (BrowserCodeReader.isVideoPlaying(element)) {\r\n                                        // if video is playing then we had success, just ignore\r\n                                        return;\r\n                                    }\r\n                                    reject(false);\r\n                                    element.removeEventListener('canplay', videoCanPlayListener);\r\n                                }, timeout);\r\n                                /**\r\n                                 * Should contain the current registered listener for video loaded-metadata,\r\n                                 * used to unregister that listener when needed.\r\n                                 */\r\n                                var videoCanPlayListener = function () {\r\n                                    BrowserCodeReader.tryPlayVideo(element).then(function (hasPlayed) {\r\n                                        clearTimeout(timeoutId);\r\n                                        element.removeEventListener('canplay', videoCanPlayListener);\r\n                                        resolve(hasPlayed);\r\n                                    });\r\n                                };\r\n                                // both should be unregistered after called\r\n                                element.addEventListener('canplay', videoCanPlayListener);\r\n                            })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Sets the new stream and request a new decoding-with-delay.\r\n     *\r\n     * @param stream The stream to be shown in the video element.\r\n     * @param decodeFn A callback for the decode method.\r\n     */\r\n    BrowserCodeReader.attachStreamToVideo = function (stream, preview, previewPlayTimeout) {\r\n        if (previewPlayTimeout === void 0) { previewPlayTimeout = 5000; }\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var videoElement;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        videoElement = BrowserCodeReader.prepareVideoElement(preview);\r\n                        BrowserCodeReader.addVideoSource(videoElement, stream);\r\n                        return [4 /*yield*/, BrowserCodeReader.playVideoOnLoadAsync(videoElement, previewPlayTimeout)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2 /*return*/, videoElement];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Returns a Promise that resolves when the given image element loads.\r\n     */\r\n    BrowserCodeReader._waitImageLoad = function (element) {\r\n        return new Promise(function (resolve, reject) {\r\n            var timeout = 10000;\r\n            // waits 10 seconds or rejects.\r\n            var timeoutId = setTimeout(function () {\r\n                if (BrowserCodeReader.isImageLoaded(element)) {\r\n                    // if video is playing then we had success, just ignore\r\n                    return;\r\n                }\r\n                // removes the listener\r\n                element.removeEventListener('load', imageLoadedListener);\r\n                // rejects the load\r\n                reject();\r\n            }, timeout);\r\n            var imageLoadedListener = function () {\r\n                clearTimeout(timeoutId);\r\n                // removes the listener\r\n                element.removeEventListener('load', imageLoadedListener);\r\n                // resolves the load\r\n                resolve();\r\n            };\r\n            element.addEventListener('load', imageLoadedListener);\r\n        });\r\n    };\r\n    /**\r\n     * Checks if the `callbackFn` is defined, otherwise throws.\r\n     */\r\n    BrowserCodeReader.checkCallbackFnOrThrow = function (callbackFn) {\r\n        if (!callbackFn) {\r\n            throw new ArgumentException('`callbackFn` is a required parameter, you cannot capture results without it.');\r\n        }\r\n    };\r\n    /**\r\n     * Standard method to dispose a media stream object.\r\n     */\r\n    BrowserCodeReader.disposeMediaStream = function (stream) {\r\n        stream.getVideoTracks().forEach(function (x) { return x.stop(); });\r\n        stream = undefined;\r\n    };\r\n    /**\r\n     * Gets the BinaryBitmap for ya! (and decodes it)\r\n     */\r\n    BrowserCodeReader.prototype.decode = function (element) {\r\n        // get binary bitmap for decode function\r\n        var canvas = BrowserCodeReader.createCanvasFromMediaElement(element);\r\n        return this.decodeFromCanvas(canvas);\r\n    };\r\n    /**\r\n     * Call the encapsulated readers decode\r\n     */\r\n    BrowserCodeReader.prototype.decodeBitmap = function (binaryBitmap) {\r\n        return this.reader.decode(binaryBitmap, this.hints);\r\n    };\r\n    /**\r\n     * Decodes some barcode from a canvas!\r\n     */\r\n    BrowserCodeReader.prototype.decodeFromCanvas = function (canvas) {\r\n        var binaryBitmap = BrowserCodeReader.createBinaryBitmapFromCanvas(canvas);\r\n        return this.decodeBitmap(binaryBitmap);\r\n    };\r\n    /**\r\n     * Decodes something from an image HTML element.\r\n     */\r\n    BrowserCodeReader.prototype.decodeFromImageElement = function (source) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var element;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!source) {\r\n                            throw new ArgumentException('An image element must be provided.');\r\n                        }\r\n                        element = BrowserCodeReader.prepareImageElement(source);\r\n                        return [4 /*yield*/, this._decodeOnLoadImage(element)];\r\n                    case 1: \r\n                    // onLoad will remove it's callback once done\r\n                    // we do not need to dispose or destroy the image\r\n                    // since it came from the user\r\n                    return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Decodes an image from a URL.\r\n     */\r\n    BrowserCodeReader.prototype.decodeFromImageUrl = function (url) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var element;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!url) {\r\n                            throw new ArgumentException('An URL must be provided.');\r\n                        }\r\n                        element = BrowserCodeReader.prepareImageElement();\r\n                        // loads the image.\r\n                        element.src = url;\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, , 3, 4]);\r\n                        return [4 /*yield*/, this.decodeFromImageElement(element)];\r\n                    case 2: \r\n                    // it waits the task so we can destroy the created image after\r\n                    return [2 /*return*/, _a.sent()];\r\n                    case 3:\r\n                        // we created this element, so we destroy it\r\n                        BrowserCodeReader.destroyImageElement(element);\r\n                        return [7 /*endfinally*/];\r\n                    case 4: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Continuously tries to decode the barcode from a stream obtained from the given constraints\r\n     * while showing the video in the specified video element.\r\n     *\r\n     * @param {MediaStream} [constraints] the media stream constraints to get s valid media stream to decode from\r\n     * @param {string|HTMLVideoElement} [previewElem] the video element in page where to show the video while\r\n     *  decoding. Can be either an element id or directly an HTMLVideoElement. Can be undefined, in\r\n     *  which case no video will be shown.\r\n     */\r\n    BrowserCodeReader.prototype.decodeFromConstraints = function (constraints, previewElem, callbackFn) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var stream, error_2;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        BrowserCodeReader.checkCallbackFnOrThrow(callbackFn);\r\n                        return [4 /*yield*/, this.getUserMedia(constraints)];\r\n                    case 1:\r\n                        stream = _a.sent();\r\n                        _a.label = 2;\r\n                    case 2:\r\n                        _a.trys.push([2, 4, , 5]);\r\n                        return [4 /*yield*/, this.decodeFromStream(stream, previewElem, callbackFn)];\r\n                    case 3: return [2 /*return*/, _a.sent()];\r\n                    case 4:\r\n                        error_2 = _a.sent();\r\n                        BrowserCodeReader.disposeMediaStream(stream);\r\n                        throw error_2;\r\n                    case 5: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * In one attempt, tries to decode the barcode from a stream obtained from the given constraints\r\n     * while showing the video in the specified video element.\r\n     *\r\n     * @param {MediaStream} [constraints] the media stream constraints to get s valid media stream to decode from\r\n     * @param {string|HTMLVideoElement} [preview] the video element in page where to show the video\r\n     *  while decoding. Can be either an element id or directly an HTMLVideoElement. Can be undefined,\r\n     *  in which case no video will be shown.\r\n     */\r\n    BrowserCodeReader.prototype.decodeFromStream = function (stream, preview, callbackFn) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var timeout, video, finalizeCallback, originalControls, videoTracks, controls, isTorchAvailable, torchTrack_1, switchTorch_1;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        BrowserCodeReader.checkCallbackFnOrThrow(callbackFn);\r\n                        timeout = this.options.tryPlayVideoTimeout;\r\n                        return [4 /*yield*/, BrowserCodeReader.attachStreamToVideo(stream, preview, timeout)];\r\n                    case 1:\r\n                        video = _a.sent();\r\n                        finalizeCallback = function () {\r\n                            // stops video tracks and releases the stream reference\r\n                            BrowserCodeReader.disposeMediaStream(stream);\r\n                            // this video was just a preview, so in order\r\n                            // to release the stream we gotta stop showing\r\n                            // it (the stream) in the video element\r\n                            BrowserCodeReader.cleanVideoSource(video);\r\n                        };\r\n                        originalControls = this.scan(video, callbackFn, finalizeCallback);\r\n                        videoTracks = stream.getVideoTracks();\r\n                        controls = __assign(__assign({}, originalControls), { stop: function () {\r\n                                originalControls.stop();\r\n                            }, streamVideoConstraintsApply: function (constraints, trackFilter) {\r\n                                return __awaiter(this, void 0, void 0, function () {\r\n                                    var tracks, tracks_2, tracks_2_1, track, e_3_1;\r\n                                    var e_3, _a;\r\n                                    return __generator(this, function (_b) {\r\n                                        switch (_b.label) {\r\n                                            case 0:\r\n                                                tracks = trackFilter ? videoTracks.filter(trackFilter) : videoTracks;\r\n                                                _b.label = 1;\r\n                                            case 1:\r\n                                                _b.trys.push([1, 6, 7, 8]);\r\n                                                tracks_2 = __values(tracks), tracks_2_1 = tracks_2.next();\r\n                                                _b.label = 2;\r\n                                            case 2:\r\n                                                if (!!tracks_2_1.done) return [3 /*break*/, 5];\r\n                                                track = tracks_2_1.value;\r\n                                                return [4 /*yield*/, track.applyConstraints(constraints)];\r\n                                            case 3:\r\n                                                _b.sent();\r\n                                                _b.label = 4;\r\n                                            case 4:\r\n                                                tracks_2_1 = tracks_2.next();\r\n                                                return [3 /*break*/, 2];\r\n                                            case 5: return [3 /*break*/, 8];\r\n                                            case 6:\r\n                                                e_3_1 = _b.sent();\r\n                                                e_3 = { error: e_3_1 };\r\n                                                return [3 /*break*/, 8];\r\n                                            case 7:\r\n                                                try {\r\n                                                    if (tracks_2_1 && !tracks_2_1.done && (_a = tracks_2.return)) _a.call(tracks_2);\r\n                                                }\r\n                                                finally { if (e_3) throw e_3.error; }\r\n                                                return [7 /*endfinally*/];\r\n                                            case 8: return [2 /*return*/];\r\n                                        }\r\n                                    });\r\n                                });\r\n                            }, streamVideoConstraintsGet: function (trackFilter) {\r\n                                return videoTracks.find(trackFilter).getConstraints();\r\n                            }, streamVideoSettingsGet: function (trackFilter) {\r\n                                return videoTracks.find(trackFilter).getSettings();\r\n                            }, streamVideoCapabilitiesGet: function (trackFilter) {\r\n                                return videoTracks.find(trackFilter).getCapabilities();\r\n                            } });\r\n                        isTorchAvailable = BrowserCodeReader.mediaStreamIsTorchCompatible(stream);\r\n                        if (isTorchAvailable) {\r\n                            torchTrack_1 = videoTracks === null || videoTracks === void 0 ? void 0 : videoTracks.find(function (t) { return BrowserCodeReader.mediaStreamIsTorchCompatibleTrack(t); });\r\n                            switchTorch_1 = function (onOff) { return __awaiter(_this, void 0, void 0, function () {\r\n                                return __generator(this, function (_a) {\r\n                                    switch (_a.label) {\r\n                                        case 0: return [4 /*yield*/, BrowserCodeReader.mediaStreamSetTorch(torchTrack_1, onOff)];\r\n                                        case 1:\r\n                                            _a.sent();\r\n                                            return [2 /*return*/];\r\n                                    }\r\n                                });\r\n                            }); };\r\n                            controls.switchTorch = switchTorch_1;\r\n                            controls.stop = function () { return __awaiter(_this, void 0, void 0, function () {\r\n                                return __generator(this, function (_a) {\r\n                                    switch (_a.label) {\r\n                                        case 0:\r\n                                            originalControls.stop();\r\n                                            return [4 /*yield*/, switchTorch_1(false)];\r\n                                        case 1:\r\n                                            _a.sent();\r\n                                            return [2 /*return*/];\r\n                                    }\r\n                                });\r\n                            }); };\r\n                        }\r\n                        return [2 /*return*/, controls];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Continuously tries to decode the barcode from the device specified by device while showing\r\n     * the video in the specified video element.\r\n     *\r\n     * @param {string|null} [deviceId] the id of one of the devices obtained after calling\r\n     *  getVideoInputDevices. Can be undefined, in this case it will decode from one of the\r\n     *  available devices, preferring the main camera (environment facing) if available.\r\n     * @param {string|HTMLVideoElement|null} [video] the video element in page where to show the video\r\n     *  while decoding. Can be either an element id or directly an HTMLVideoElement. Can be undefined,\r\n     *  in which case no video will be shown.\r\n     */\r\n    BrowserCodeReader.prototype.decodeFromVideoDevice = function (deviceId, previewElem, callbackFn) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var videoConstraints, constraints;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        BrowserCodeReader.checkCallbackFnOrThrow(callbackFn);\r\n                        if (!deviceId) {\r\n                            videoConstraints = { facingMode: 'environment' };\r\n                        }\r\n                        else {\r\n                            videoConstraints = { deviceId: { exact: deviceId } };\r\n                        }\r\n                        constraints = { video: videoConstraints };\r\n                        return [4 /*yield*/, this.decodeFromConstraints(constraints, previewElem, callbackFn)];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Decodes something from an image HTML element.\r\n     */\r\n    BrowserCodeReader.prototype.decodeFromVideoElement = function (source, callbackFn) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var element, timeout;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        BrowserCodeReader.checkCallbackFnOrThrow(callbackFn);\r\n                        if (!source) {\r\n                            throw new ArgumentException('A video element must be provided.');\r\n                        }\r\n                        element = BrowserCodeReader.prepareVideoElement(source);\r\n                        timeout = this.options.tryPlayVideoTimeout;\r\n                        // plays the video\r\n                        return [4 /*yield*/, BrowserCodeReader.playVideoOnLoadAsync(element, timeout)];\r\n                    case 1:\r\n                        // plays the video\r\n                        _a.sent();\r\n                        // starts decoding after played the video\r\n                        return [2 /*return*/, this.scan(element, callbackFn)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Decodes a video from a URL until it ends.\r\n     */\r\n    BrowserCodeReader.prototype.decodeFromVideoUrl = function (url, callbackFn) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var element, finalizeCallback, timeout, controls;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        BrowserCodeReader.checkCallbackFnOrThrow(callbackFn);\r\n                        if (!url) {\r\n                            throw new ArgumentException('An URL must be provided.');\r\n                        }\r\n                        element = BrowserCodeReader.prepareVideoElement();\r\n                        // starts loading the video\r\n                        element.src = url;\r\n                        finalizeCallback = function () {\r\n                            // dispose created video element\r\n                            BrowserCodeReader.cleanVideoSource(element);\r\n                        };\r\n                        timeout = this.options.tryPlayVideoTimeout;\r\n                        // plays the video\r\n                        return [4 /*yield*/, BrowserCodeReader.playVideoOnLoadAsync(element, timeout)];\r\n                    case 1:\r\n                        // plays the video\r\n                        _a.sent();\r\n                        controls = this.scan(element, callbackFn, finalizeCallback);\r\n                        return [2 /*return*/, controls];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * In one attempt, tries to decode the barcode from a stream obtained from the given\r\n     * constraints while showing the video in the specified video element.\r\n     *\r\n     * @param constraints the media stream constraints to get s valid media stream to decode from\r\n     * @param videoSource the video element in page where to show the video while decoding.\r\n     *  Can be either an element id or directly an HTMLVideoElement. Can be undefined,\r\n     *  in which case no video will be shown.\r\n     *  The decoding result.\r\n     */\r\n    BrowserCodeReader.prototype.decodeOnceFromConstraints = function (constraints, videoSource) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var stream;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.getUserMedia(constraints)];\r\n                    case 1:\r\n                        stream = _a.sent();\r\n                        return [4 /*yield*/, this.decodeOnceFromStream(stream, videoSource)];\r\n                    case 2: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * In one attempt, tries to decode the barcode from a stream obtained from the given\r\n     * constraints while showing the video in the specified video element.\r\n     *\r\n     * @param {MediaStream} [constraints] the media stream constraints to get s valid media stream to decode from\r\n     * @param {string|HTMLVideoElement} [video] the video element in page where to show the video while decoding.\r\n     *  Can be either an element id or directly an HTMLVideoElement. Can be undefined,\r\n     *  in which case no video will be shown.\r\n     */\r\n    BrowserCodeReader.prototype.decodeOnceFromStream = function (stream, preview) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var receivedPreview, video, result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        receivedPreview = Boolean(preview);\r\n                        return [4 /*yield*/, BrowserCodeReader.attachStreamToVideo(stream, preview)];\r\n                    case 1:\r\n                        video = _a.sent();\r\n                        _a.label = 2;\r\n                    case 2:\r\n                        _a.trys.push([2, , 4, 5]);\r\n                        return [4 /*yield*/, this.scanOneResult(video)];\r\n                    case 3:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, result];\r\n                    case 4:\r\n                        if (!receivedPreview) {\r\n                            BrowserCodeReader.cleanVideoSource(video);\r\n                        }\r\n                        return [7 /*endfinally*/];\r\n                    case 5: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * In one attempt, tries to decode the barcode from the device specified by deviceId\r\n     * while showing the video in the specified video element.\r\n     *\r\n     * @param deviceId the id of one of the devices obtained after calling getVideoInputDevices.\r\n     *  Can be undefined, in this case it will decode from one of the available devices,\r\n     *  preferring the main camera (environment facing) if available.\r\n     * @param videoSource the video element in page where to show the video while decoding.\r\n     *  Can be either an element id or directly an HTMLVideoElement. Can be undefined,\r\n     *  in which case no video will be shown.\r\n     */\r\n    BrowserCodeReader.prototype.decodeOnceFromVideoDevice = function (deviceId, videoSource) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var videoConstraints, constraints;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!deviceId) {\r\n                            videoConstraints = { facingMode: 'environment' };\r\n                        }\r\n                        else {\r\n                            videoConstraints = { deviceId: { exact: deviceId } };\r\n                        }\r\n                        constraints = { video: videoConstraints };\r\n                        return [4 /*yield*/, this.decodeOnceFromConstraints(constraints, videoSource)];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Decodes something from an image HTML element.\r\n     */\r\n    BrowserCodeReader.prototype.decodeOnceFromVideoElement = function (source) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var element, timeout;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!source) {\r\n                            throw new ArgumentException('A video element must be provided.');\r\n                        }\r\n                        element = BrowserCodeReader.prepareVideoElement(source);\r\n                        timeout = this.options.tryPlayVideoTimeout;\r\n                        // plays the video\r\n                        return [4 /*yield*/, BrowserCodeReader.playVideoOnLoadAsync(element, timeout)];\r\n                    case 1:\r\n                        // plays the video\r\n                        _a.sent();\r\n                        return [4 /*yield*/, this.scanOneResult(element)];\r\n                    case 2: \r\n                    // starts decoding after played the video\r\n                    return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Decodes a video from a URL.\r\n     */\r\n    BrowserCodeReader.prototype.decodeOnceFromVideoUrl = function (url) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var element, task;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!url) {\r\n                            throw new ArgumentException('An URL must be provided.');\r\n                        }\r\n                        element = BrowserCodeReader.prepareVideoElement();\r\n                        // starts loading the video\r\n                        element.src = url;\r\n                        task = this.decodeOnceFromVideoElement(element);\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, , 3, 4]);\r\n                        return [4 /*yield*/, task];\r\n                    case 2: \r\n                    // it waits the task so we can destroy the created image after\r\n                    return [2 /*return*/, _a.sent()];\r\n                    case 3:\r\n                        // we created this element, so we destroy it\r\n                        BrowserCodeReader.cleanVideoSource(element);\r\n                        return [7 /*endfinally*/];\r\n                    case 4: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Tries to decode from the video input until it finds some value.\r\n     */\r\n    BrowserCodeReader.prototype.scanOneResult = function (element, retryIfNotFound, retryIfChecksumError, retryIfFormatError) {\r\n        var _this = this;\r\n        if (retryIfNotFound === void 0) { retryIfNotFound = true; }\r\n        if (retryIfChecksumError === void 0) { retryIfChecksumError = true; }\r\n        if (retryIfFormatError === void 0) { retryIfFormatError = true; }\r\n        return new Promise(function (resolve, reject) {\r\n            // reuses the scan API, but returns at the first successful result\r\n            _this.scan(element, function (result, error, controls) {\r\n                if (result) {\r\n                    // good result, returning\r\n                    resolve(result);\r\n                    controls.stop();\r\n                    return;\r\n                }\r\n                if (error) {\r\n                    // checks if it should retry\r\n                    if (error instanceof NotFoundException && retryIfNotFound) {\r\n                        return;\r\n                    }\r\n                    if (error instanceof ChecksumException && retryIfChecksumError) {\r\n                        return;\r\n                    }\r\n                    if (error instanceof FormatException && retryIfFormatError) {\r\n                        return;\r\n                    }\r\n                    // not re-trying\r\n                    controls.stop(); // stops scan loop\r\n                    reject(error); // returns the error\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Continuously decodes from video input.\r\n     *\r\n     * @param element HTML element to scan/decode from. It will not be disposed or destroyed.\r\n     * @param callbackFn Called after every scan attempt, being it successful or errored.\r\n     * @param finalizeCallback Called after scan process reaches the end or stop is called.\r\n     */\r\n    BrowserCodeReader.prototype.scan = function (element, callbackFn, finalizeCallback) {\r\n        var _this = this;\r\n        BrowserCodeReader.checkCallbackFnOrThrow(callbackFn);\r\n        /**\r\n         * The HTML canvas element, used to draw the video or image's frame for decoding.\r\n         */\r\n        var captureCanvas = BrowserCodeReader.createCaptureCanvas(element);\r\n        /**\r\n         * The HTML canvas element context.\r\n         */\r\n        var captureCanvasContext = captureCanvas.getContext('2d');\r\n        // cannot proceed w/o this\r\n        if (!captureCanvasContext) {\r\n            throw new Error('Couldn\\'t create canvas for visual element scan.');\r\n        }\r\n        var disposeCanvas = function () {\r\n            captureCanvasContext = undefined;\r\n            captureCanvas = undefined;\r\n        };\r\n        var stopScan = false;\r\n        var lastTimeoutId;\r\n        // can be called to break the scan loop\r\n        var stop = function () {\r\n            stopScan = true;\r\n            clearTimeout(lastTimeoutId);\r\n            disposeCanvas();\r\n            if (finalizeCallback) {\r\n                finalizeCallback();\r\n            }\r\n        };\r\n        // created for extensibility\r\n        var controls = { stop: stop };\r\n        // this async loop allows infinite (or almost? maybe) scans\r\n        var loop = function () {\r\n            if (stopScan) {\r\n                // no need to clear timeouts as none was create yet in this scope.\r\n                return;\r\n            }\r\n            try {\r\n                BrowserCodeReader.drawImageOnCanvas(captureCanvasContext, element);\r\n                var result = _this.decodeFromCanvas(captureCanvas);\r\n                callbackFn(result, undefined, controls);\r\n                lastTimeoutId = setTimeout(loop, _this.options.delayBetweenScanSuccess);\r\n            }\r\n            catch (error) {\r\n                callbackFn(undefined, error, controls);\r\n                var isChecksumError = error instanceof ChecksumException;\r\n                var isFormatError = error instanceof FormatException;\r\n                var isNotFound = error instanceof NotFoundException;\r\n                if (isChecksumError || isFormatError || isNotFound) {\r\n                    // trying again\r\n                    lastTimeoutId = setTimeout(loop, _this.options.delayBetweenScanAttempts);\r\n                    return;\r\n                }\r\n                // not trying again\r\n                disposeCanvas();\r\n                if (finalizeCallback) {\r\n                    finalizeCallback(error);\r\n                }\r\n            }\r\n        };\r\n        // starts the async loop\r\n        loop();\r\n        return controls;\r\n    };\r\n    /**\r\n     * Waits for the image to load and then tries to decode it.\r\n     */\r\n    BrowserCodeReader.prototype._decodeOnLoadImage = function (element) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var isImageLoaded;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        isImageLoaded = BrowserCodeReader.isImageLoaded(element);\r\n                        if (!!isImageLoaded) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, BrowserCodeReader._waitImageLoad(element)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        _a.label = 2;\r\n                    case 2: return [2 /*return*/, this.decode(element)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Get MediaStream from browser to be used.\r\n     * @param constraints constraints the media stream constraints to get s valid media stream to decode from.\r\n     * @private For private use.\r\n     */\r\n    BrowserCodeReader.prototype.getUserMedia = function (constraints) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var stream;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, navigator.mediaDevices.getUserMedia(constraints)];\r\n                    case 1:\r\n                        stream = _a.sent();\r\n                        BrowserCodeReader.streamTracker.push(stream);\r\n                        return [2 /*return*/, stream];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Keeps track to created media streams.\r\n     * @private there is no need this array to be accessible from outside.\r\n     */\r\n    BrowserCodeReader.streamTracker = [];\r\n    return BrowserCodeReader;\r\n}());\r\nexport { BrowserCodeReader };\r\n", "var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nimport { AztecCodeReader } from '@zxing/library';\r\nimport { BrowserCodeReader } from './BrowserCodeReader';\r\n/**\r\n * Aztec Code reader to use from browser.\r\n *\r\n * @class BrowserAztecCodeReader\r\n * @extends {BrowserCodeReader}\r\n */\r\nvar BrowserAztecCodeReader = /** @class */ (function (_super) {\r\n    __extends(BrowserAztecCodeReader, _super);\r\n    /**\r\n     * Creates an instance of BrowserAztecCodeReader.\r\n     */\r\n    function BrowserAztecCodeReader(hints, options) {\r\n        return _super.call(this, new AztecCodeReader(), hints, options) || this;\r\n    }\r\n    return BrowserAztecCodeReader;\r\n}(BrowserCodeReader));\r\nexport { BrowserAztecCodeReader };\r\n", "var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nimport { MultiFormatOneDReader } from '@zxing/library';\r\nimport { BrowserCodeReader } from './BrowserCodeReader';\r\n/**\r\n * Reader to be used for any One Dimension type barcode.\r\n */\r\nvar BrowserMultiFormatOneDReader = /** @class */ (function (_super) {\r\n    __extends(BrowserMultiFormatOneDReader, _super);\r\n    /**\r\n     * Creates an instance of BrowserBarcodeReader.\r\n     * @param {Map<DecodeHintType, any>} hints?\r\n     * @param options\r\n     */\r\n    function BrowserMultiFormatOneDReader(hints, options) {\r\n        return _super.call(this, new MultiFormatOneDReader(hints), hints, options) || this;\r\n    }\r\n    return BrowserMultiFormatOneDReader;\r\n}(BrowserCodeReader));\r\nexport { BrowserMultiFormatOneDReader };\r\n", "var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nimport { DataMatrixReader } from '@zxing/library';\r\nimport { BrowserCodeReader } from './BrowserCodeReader';\r\n/**\r\n * QR Code reader to use from browser.\r\n */\r\nvar BrowserDatamatrixCodeReader = /** @class */ (function (_super) {\r\n    __extends(BrowserDatamatrixCodeReader, _super);\r\n    /**\r\n     * Creates an instance of BrowserQRCodeReader.\r\n     */\r\n    function BrowserDatamatrixCodeReader(hints, options) {\r\n        return _super.call(this, new DataMatrixReader(), hints, options) || this;\r\n    }\r\n    return BrowserDatamatrixCodeReader;\r\n}(BrowserCodeReader));\r\nexport { BrowserDatamatrixCodeReader };\r\n", "var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nimport { DecodeHintType, MultiFormatReader, } from '@zxing/library';\r\nimport { BrowserCodeReader } from './BrowserCodeReader';\r\nvar BrowserMultiFormatReader = /** @class */ (function (_super) {\r\n    __extends(BrowserMultiFormatReader, _super);\r\n    function BrowserMultiFormatReader(hints, options) {\r\n        var _this = this;\r\n        var reader = new MultiFormatReader();\r\n        reader.setHints(hints);\r\n        _this = _super.call(this, reader, hints, options) || this;\r\n        _this.reader = reader;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(BrowserMultiFormatReader.prototype, \"possibleFormats\", {\r\n        set: function (formats) {\r\n            this.hints.set(DecodeHintType.POSSIBLE_FORMATS, formats);\r\n            this.reader.setHints(this.hints);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Overwrite decodeBitmap to call decodeWithState, which will pay\r\n     * attention to the hints set in the constructor function\r\n     */\r\n    BrowserMultiFormatReader.prototype.decodeBitmap = function (binaryBitmap) {\r\n        return this.reader.decodeWithState(binaryBitmap);\r\n    };\r\n    /**\r\n     * Allows to change hints in runtime.\r\n     */\r\n    BrowserMultiFormatReader.prototype.setHints = function (hints) {\r\n        this.hints = hints;\r\n        this.reader.setHints(this.hints);\r\n    };\r\n    return BrowserMultiFormatReader;\r\n}(BrowserCodeReader));\r\nexport { BrowserMultiFormatReader };\r\n", "var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nimport { PDF417Reader } from '@zxing/library';\r\nimport { BrowserCodeReader } from './BrowserCodeReader';\r\n/**\r\n * QR Code reader to use from browser.\r\n */\r\nvar BrowserPDF417Reader = /** @class */ (function (_super) {\r\n    __extends(BrowserPDF417Reader, _super);\r\n    /**\r\n     * Creates an instance of BrowserPDF417Reader.\r\n     */\r\n    function BrowserPDF417Reader(hints, options) {\r\n        return _super.call(this, new PDF417Reader(), hints, options) || this;\r\n    }\r\n    return BrowserPDF417Reader;\r\n}(BrowserCodeReader));\r\nexport { BrowserPDF417Reader };\r\n", "var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nimport { QRCodeReader } from '@zxing/library';\r\nimport { BrowserCodeReader } from './BrowserCodeReader';\r\n/**\r\n * QR Code reader to use from browser.\r\n */\r\nvar BrowserQRCodeReader = /** @class */ (function (_super) {\r\n    __extends(BrowserQRCodeReader, _super);\r\n    /**\r\n     * Creates an instance of BrowserQRCodeReader.\r\n     */\r\n    function BrowserQRCodeReader(hints, options) {\r\n        return _super.call(this, new QRCodeReader(), hints, options) || this;\r\n    }\r\n    return BrowserQRCodeReader;\r\n}(BrowserCodeReader));\r\nexport { BrowserQRCodeReader };\r\n", "import { EncodeHintType, IllegalArgumentException, IllegalStateException, QRCodeDecoderErrorCorrectionLevel, QRCodeEncoder, } from '@zxing/library';\r\nvar svgNs = 'http://www.w3.org/2000/svg';\r\n/**/\r\nvar BrowserCodeSvgWriter = /** @class */ (function () {\r\n    /**\r\n     * Constructs. 😉\r\n     */\r\n    function BrowserCodeSvgWriter(containerElement) {\r\n        if (typeof containerElement === 'string') {\r\n            var container = document.getElementById(containerElement);\r\n            if (!container) {\r\n                throw new Error(\"Could not find a Container element with '\".concat(containerElement, \"'.\"));\r\n            }\r\n            this.containerElement = container;\r\n        }\r\n        else {\r\n            this.containerElement = containerElement;\r\n        }\r\n    }\r\n    /**\r\n     * Writes the QR code to a SVG and renders it in the container.\r\n     */\r\n    BrowserCodeSvgWriter.prototype.write = function (contents, width, height, hints) {\r\n        if (contents.length === 0) {\r\n            throw new IllegalArgumentException('Found empty contents');\r\n        }\r\n        if (width < 0 || height < 0) {\r\n            throw new IllegalArgumentException('Requested dimensions are too small: ' + width + 'x' + height);\r\n        }\r\n        var quietZone = hints && hints.get(EncodeHintType.MARGIN) !== undefined\r\n            ? Number.parseInt(hints.get(EncodeHintType.MARGIN).toString(), 10)\r\n            : BrowserCodeSvgWriter.QUIET_ZONE_SIZE;\r\n        var code = this.encode(hints, contents);\r\n        return this.renderResult(code, width, height, quietZone);\r\n    };\r\n    /**\r\n     * Creates a SVG element.\r\n     */\r\n    BrowserCodeSvgWriter.prototype.createSVGElement = function (w, h) {\r\n        var el = document.createElementNS(BrowserCodeSvgWriter.SVG_NS, 'svg');\r\n        el.setAttributeNS(svgNs, 'width', h.toString());\r\n        el.setAttributeNS(svgNs, 'height', w.toString());\r\n        return el;\r\n    };\r\n    /**\r\n     * Creates a SVG rect.\r\n     */\r\n    BrowserCodeSvgWriter.prototype.createSvgPathPlaceholderElement = function (w, h) {\r\n        var el = document.createElementNS(BrowserCodeSvgWriter.SVG_NS, 'path');\r\n        el.setAttributeNS(svgNs, 'd', \"M0 0h\".concat(w, \"v\").concat(h, \"H0z\"));\r\n        el.setAttributeNS(svgNs, 'fill', 'none');\r\n        return el;\r\n    };\r\n    /**\r\n     * Creates a SVG rect.\r\n     */\r\n    BrowserCodeSvgWriter.prototype.createSvgRectElement = function (x, y, w, h) {\r\n        var el = document.createElementNS(BrowserCodeSvgWriter.SVG_NS, 'rect');\r\n        el.setAttributeNS(svgNs, 'x', x.toString());\r\n        el.setAttributeNS(svgNs, 'y', y.toString());\r\n        el.setAttributeNS(svgNs, 'height', w.toString());\r\n        el.setAttributeNS(svgNs, 'width', h.toString());\r\n        el.setAttributeNS(svgNs, 'fill', '#000000');\r\n        return el;\r\n    };\r\n    /**\r\n     * Encodes the content to a Barcode type.\r\n     */\r\n    BrowserCodeSvgWriter.prototype.encode = function (hints, contents) {\r\n        var errorCorrectionLevel = QRCodeDecoderErrorCorrectionLevel.L;\r\n        if (hints && hints.get(EncodeHintType.ERROR_CORRECTION) !== undefined) {\r\n            var correctionStr = hints.get(EncodeHintType.ERROR_CORRECTION).toString();\r\n            errorCorrectionLevel = QRCodeDecoderErrorCorrectionLevel.fromString(correctionStr);\r\n        }\r\n        var code = QRCodeEncoder.encode(contents, errorCorrectionLevel, hints);\r\n        return code;\r\n    };\r\n    /**\r\n     * Renders the SVG in the container.\r\n     *\r\n     * @note the input matrix uses 0 == white, 1 == black. The output matrix\r\n     *  uses 0 == black, 255 == white (i.e. an 8 bit greyscale bitmap).\r\n     */\r\n    BrowserCodeSvgWriter.prototype.renderResult = function (code, width /*int*/, height /*int*/, quietZone /*int*/) {\r\n        // if (this.format && format != this.format) {\r\n        //   throw new IllegalArgumentException(\"Can only encode QR_CODE, but got \" + format)\r\n        // }\r\n        var input = code.getMatrix();\r\n        if (input === null) {\r\n            throw new IllegalStateException();\r\n        }\r\n        var inputWidth = input.getWidth();\r\n        var inputHeight = input.getHeight();\r\n        var qrWidth = inputWidth + (quietZone * 2);\r\n        var qrHeight = inputHeight + (quietZone * 2);\r\n        var outputWidth = Math.max(width, qrWidth);\r\n        var outputHeight = Math.max(height, qrHeight);\r\n        var multiple = Math.min(Math.floor(outputWidth / qrWidth), Math.floor(outputHeight / qrHeight));\r\n        // Padding includes both the quiet zone and the extra white pixels to accommodate the requested\r\n        // dimensions. For example, if input is 25x25 the QR will be 33x33 including the quiet zone.\r\n        // If the requested size is 200x160, the multiple will be 4, for a QR of 132x132. These will\r\n        // handle all the padding from 100x100 (the actual QR) up to 200x160.\r\n        var leftPadding = Math.floor((outputWidth - (inputWidth * multiple)) / 2);\r\n        var topPadding = Math.floor((outputHeight - (inputHeight * multiple)) / 2);\r\n        var svgElement = this.createSVGElement(outputWidth, outputHeight);\r\n        var placeholder = this.createSvgPathPlaceholderElement(width, height);\r\n        svgElement.appendChild(placeholder);\r\n        this.containerElement.appendChild(svgElement);\r\n        // 2D loop\r\n        for (var inputY = 0, outputY = topPadding; inputY < inputHeight; inputY++, outputY += multiple) {\r\n            // Write the contents of this row of the barcode\r\n            for (var inputX = 0, outputX = leftPadding; inputX < inputWidth; inputX++, outputX += multiple) {\r\n                if (input.get(inputX, inputY) === 1) {\r\n                    var svgRectElement = this.createSvgRectElement(outputX, outputY, multiple, multiple);\r\n                    svgElement.appendChild(svgRectElement);\r\n                }\r\n            }\r\n        }\r\n        return svgElement;\r\n    };\r\n    /**\r\n     * Default quiet zone in pixels.\r\n     */\r\n    BrowserCodeSvgWriter.QUIET_ZONE_SIZE = 4;\r\n    /**\r\n     * SVG markup NameSpace\r\n     */\r\n    BrowserCodeSvgWriter.SVG_NS = 'http://www.w3.org/2000/svg';\r\n    return BrowserCodeSvgWriter;\r\n}());\r\nexport { BrowserCodeSvgWriter };\r\n", "import { EncodeHintType, IllegalArgumentException, IllegalStateException, QRCodeDecoderErrorCorrectionLevel, QRCodeEncoder, } from '@zxing/library';\r\nvar svgNs = 'http://www.w3.org/2000/svg';\r\n/**/\r\nvar BrowserQRCodeSvgWriter = /** @class */ (function () {\r\n    function BrowserQRCodeSvgWriter() {\r\n    }\r\n    /**\r\n     * Writes and renders a QRCode SVG element.\r\n     *\r\n     * @param contents\r\n     * @param width\r\n     * @param height\r\n     * @param hints\r\n     */\r\n    BrowserQRCodeSvgWriter.prototype.write = function (contents, width, height, hints) {\r\n        if (contents.length === 0) {\r\n            throw new IllegalArgumentException('Found empty contents');\r\n        }\r\n        // if (format != BarcodeFormat.QR_CODE) {\r\n        //   throw new IllegalArgumentException(\"Can only encode QR_CODE, but got \" + format)\r\n        // }\r\n        if (width < 0 || height < 0) {\r\n            throw new IllegalArgumentException('Requested dimensions are too small: ' + width + 'x' + height);\r\n        }\r\n        var errorCorrectionLevel = QRCodeDecoderErrorCorrectionLevel.L;\r\n        var quietZone = BrowserQRCodeSvgWriter.QUIET_ZONE_SIZE;\r\n        if (hints) {\r\n            if (undefined !== hints.get(EncodeHintType.ERROR_CORRECTION)) {\r\n                var correctionStr = hints.get(EncodeHintType.ERROR_CORRECTION).toString();\r\n                errorCorrectionLevel = QRCodeDecoderErrorCorrectionLevel.fromString(correctionStr);\r\n            }\r\n            if (undefined !== hints.get(EncodeHintType.MARGIN)) {\r\n                quietZone = Number.parseInt(hints.get(EncodeHintType.MARGIN).toString(), 10);\r\n            }\r\n        }\r\n        var code = QRCodeEncoder.encode(contents, errorCorrectionLevel, hints);\r\n        return this.renderResult(code, width, height, quietZone);\r\n    };\r\n    /**\r\n     * Renders the result and then appends it to the DOM.\r\n     */\r\n    BrowserQRCodeSvgWriter.prototype.writeToDom = function (containerElement, contents, width, height, hints) {\r\n        if (typeof containerElement === 'string') {\r\n            var targetEl = document.querySelector(containerElement);\r\n            if (!targetEl) {\r\n                throw new Error('Could no find the target HTML element.');\r\n            }\r\n            containerElement = targetEl;\r\n        }\r\n        var svgElement = this.write(contents, width, height, hints);\r\n        if (containerElement instanceof HTMLElement) {\r\n            containerElement.appendChild(svgElement);\r\n        }\r\n    };\r\n    /**\r\n     * Note that the input matrix uses 0 == white, 1 == black.\r\n     * The output matrix uses 0 == black, 255 == white (i.e. an 8 bit greyscale bitmap).\r\n     */\r\n    BrowserQRCodeSvgWriter.prototype.renderResult = function (code, width /*int*/, height /*int*/, quietZone /*int*/) {\r\n        var input = code.getMatrix();\r\n        if (input === null) {\r\n            throw new IllegalStateException();\r\n        }\r\n        var inputWidth = input.getWidth();\r\n        var inputHeight = input.getHeight();\r\n        var qrWidth = inputWidth + (quietZone * 2);\r\n        var qrHeight = inputHeight + (quietZone * 2);\r\n        var outputWidth = Math.max(width, qrWidth);\r\n        var outputHeight = Math.max(height, qrHeight);\r\n        var multiple = Math.min(Math.floor(outputWidth / qrWidth), Math.floor(outputHeight / qrHeight));\r\n        // Padding includes both the quiet zone and the extra white pixels to accommodate the requested\r\n        // dimensions. For example, if input is 25x25 the QR will be 33x33 including the quiet zone.\r\n        // If the requested size is 200x160, the multiple will be 4, for a QR of 132x132. These will\r\n        // handle all the padding from 100x100 (the actual QR) up to 200x160.\r\n        var leftPadding = Math.floor((outputWidth - (inputWidth * multiple)) / 2);\r\n        var topPadding = Math.floor((outputHeight - (inputHeight * multiple)) / 2);\r\n        var svgElement = this.createSVGElement(outputWidth, outputHeight);\r\n        for (var inputY = 0, outputY = topPadding; inputY < inputHeight; inputY++, outputY += multiple) {\r\n            // Write the contents of this row of the barcode\r\n            for (var inputX = 0, outputX = leftPadding; inputX < inputWidth; inputX++, outputX += multiple) {\r\n                if (input.get(inputX, inputY) === 1) {\r\n                    var svgRectElement = this.createSvgRectElement(outputX, outputY, multiple, multiple);\r\n                    svgElement.appendChild(svgRectElement);\r\n                }\r\n            }\r\n        }\r\n        return svgElement;\r\n    };\r\n    /**\r\n     * Creates a SVG element.\r\n     *\r\n     * @param w SVG's width attribute\r\n     * @param h SVG's height attribute\r\n     */\r\n    BrowserQRCodeSvgWriter.prototype.createSVGElement = function (w, h) {\r\n        var svgElement = document.createElementNS(svgNs, 'svg');\r\n        var width = w.toString();\r\n        var height = h.toString();\r\n        svgElement.setAttribute('height', height);\r\n        svgElement.setAttribute('width', width);\r\n        svgElement.setAttribute('viewBox', \"0 0 \" + width + \" \" + height);\r\n        return svgElement;\r\n    };\r\n    /**\r\n     * Creates a SVG rect element.\r\n     *\r\n     * @param x Element's x coordinate\r\n     * @param y Element's y coordinate\r\n     * @param w Element's width attribute\r\n     * @param h Element's height attribute\r\n     */\r\n    BrowserQRCodeSvgWriter.prototype.createSvgRectElement = function (x, y, w, h) {\r\n        var rect = document.createElementNS(svgNs, 'rect');\r\n        rect.setAttribute('x', x.toString());\r\n        rect.setAttribute('y', y.toString());\r\n        rect.setAttribute('height', w.toString());\r\n        rect.setAttribute('width', h.toString());\r\n        rect.setAttribute('fill', '#000000');\r\n        return rect;\r\n    };\r\n    BrowserQRCodeSvgWriter.QUIET_ZONE_SIZE = 4;\r\n    return BrowserQRCodeSvgWriter;\r\n}());\r\nexport { BrowserQRCodeSvgWriter };\r\n", "import { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { EventEmitter, Component, ChangeDetectionStrategy, ViewChild, Input, Output, NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { BrowserMultiFormatReader, BrowserCodeReader } from '@zxing/browser';\nimport { NotFoundException, ChecksumException, FormatException, DecodeHintType, BarcodeFormat } from '@zxing/library';\nimport { BehaviorSubject } from 'rxjs';\n\n/**\r\n * Based on zxing-typescript BrowserCodeReader\r\n */\nconst _c0 = [\"preview\"];\nclass BrowserMultiFormatContinuousReader extends BrowserMultiFormatReader {\n  /**\r\n   * Returns the code reader scanner controls.\r\n   */\n  getScannerControls() {\n    if (!this.scannerControls) {\n      throw new Error('No scanning is running at the time.');\n    }\n    return this.scannerControls;\n  }\n  /**\r\n   * Starts the decoding from the current or a new video element.\r\n   *\r\n   * @param deviceId The device's to be used Id\r\n   * @param previewEl A new video element\r\n   */\n  async scanFromDeviceObservable(deviceId, previewEl) {\n    const scan$ = new BehaviorSubject({});\n    let ctrls;\n    try {\n      ctrls = await this.decodeFromVideoDevice(deviceId, previewEl, (result, error) => {\n        if (!error) {\n          scan$.next({\n            result\n          });\n          return;\n        }\n        const errorName = error.name;\n        // stream cannot stop on fails.\n        if (\n        // scan Failure - found nothing, no error\n        errorName === NotFoundException.name ||\n        // scan Error - found the QR but got error on decoding\n        errorName === ChecksumException.name || errorName === FormatException.name || error.message.includes('No MultiFormat Readers were able to detect the code.')) {\n          scan$.next({\n            error\n          });\n          return;\n        }\n        // probably fatal error\n        scan$.error(error);\n        this.scannerControls.stop();\n        this.scannerControls = undefined;\n        return;\n      });\n      this.scannerControls = {\n        ...ctrls,\n        stop() {\n          ctrls.stop();\n          scan$.complete();\n        }\n      };\n    } catch (e) {\n      scan$.error(e);\n      this.scannerControls?.stop();\n      this.scannerControls = undefined;\n    }\n    return scan$.asObservable();\n  }\n}\nclass ZXingScannerComponent {\n  /**\r\n   * Exposes the current code reader, so the user can use it's APIs.\r\n   */\n  get codeReader() {\n    return this._codeReader;\n  }\n  /**\r\n   * User device input\r\n   */\n  set device(device) {\n    if (!this._ready) {\n      this._devicePreStart = device;\n      // let's ignore silently, users don't like logs\n      return;\n    }\n    if (this.isAutostarting) {\n      // do not allow setting devices during auto-start, since it will set one and emit it.\n      console.warn('Avoid setting a device during auto-start.');\n      return;\n    }\n    if (this.isCurrentDevice(device)) {\n      console.warn('Setting the same device is not allowed.');\n      return;\n    }\n    if (!this.hasPermission) {\n      console.warn('Permissions not set yet, waiting for them to be set to apply device change.');\n      // this.permissionResponse\n      //   .pipe(\n      //     take(1),\n      //     tap(() => console.log(`Permissions set, applying device change${device ? ` (${device.deviceId})` : ''}.`))\n      //   )\n      //   .subscribe(() => this.device = device);\n      return;\n    }\n    this.setDevice(device);\n  }\n  /**\r\n   * User device accessor.\r\n   */\n  get device() {\n    return this._device;\n  }\n  /**\r\n   * Returns all the registered formats.\r\n   */\n  get formats() {\n    return this.hints.get(DecodeHintType.POSSIBLE_FORMATS);\n  }\n  /**\r\n   * Registers formats the scanner should support.\r\n   *\r\n   * @param input BarcodeFormat or case-insensitive string array.\r\n   */\n  set formats(input) {\n    if (typeof input === 'string') {\n      throw new Error('Invalid formats, make sure the [formats] input is a binding.');\n    }\n    // formats may be set from html template as BarcodeFormat or string array\n    const formats = input.map(f => this.getBarcodeFormatOrFail(f));\n    const hints = this.hints;\n    // updates the hints\n    hints.set(DecodeHintType.POSSIBLE_FORMATS, formats);\n    // handles updating the codeReader\n    this.hints = hints;\n  }\n  /**\r\n   * Returns all the registered hints.\r\n   */\n  get hints() {\n    return this._hints;\n  }\n  /**\r\n   * Does what it takes to set the hints.\r\n   */\n  set hints(hints) {\n    this._hints = hints;\n    // new instance with new hints.\n    this.codeReader?.setHints(this._hints);\n  }\n  /**\r\n   * Sets the desired constraints in all video tracks.\r\n   * @experimental\r\n   */\n  set videoConstraints(constraints) {\n    // new instance with new hints.\n    const controls = this.codeReader?.getScannerControls();\n    if (!controls) {\n      // fails silently\n      return;\n    }\n    controls?.streamVideoConstraintsApply(constraints);\n  }\n  /**\r\n   *\r\n   */\n  set isAutostarting(state) {\n    this._isAutostarting = state;\n    this.autostarting.next(state);\n  }\n  /**\r\n   *\r\n   */\n  get isAutostarting() {\n    return this._isAutostarting;\n  }\n  /**\r\n   * Can turn on/off the device flashlight.\r\n   *\r\n   * @experimental Torch/Flash APIs are not stable in all browsers, it may be buggy!\r\n   */\n  set torch(onOff) {\n    try {\n      const controls = this.getCodeReader().getScannerControls();\n      controls.switchTorch(onOff);\n    } catch (error) {\n      // ignore error\n    }\n  }\n  /**\r\n   * Starts and Stops the scanning.\r\n   */\n  set enable(enabled) {\n    this._enabled = Boolean(enabled);\n    if (!this._enabled) {\n      this.reset();\n      BrowserMultiFormatContinuousReader.releaseAllStreams();\n    } else {\n      if (this.device) {\n        this.scanFromDevice(this.device.deviceId);\n      } else {\n        this.init();\n      }\n    }\n  }\n  /**\r\n   * Tells if the scanner is enabled or not.\r\n   */\n  get enabled() {\n    return this._enabled;\n  }\n  /**\r\n   * If is `tryHarder` enabled.\r\n   */\n  get tryHarder() {\n    return this.hints.get(DecodeHintType.TRY_HARDER);\n  }\n  /**\r\n   * Enable/disable tryHarder hint.\r\n   */\n  set tryHarder(enable) {\n    const hints = this.hints;\n    if (enable) {\n      hints.set(DecodeHintType.TRY_HARDER, true);\n    } else {\n      hints.delete(DecodeHintType.TRY_HARDER);\n    }\n    this.hints = hints;\n  }\n  /**\r\n   * Constructor to build the object and do some DI.\r\n   */\n  constructor() {\n    /**\r\n     * Delay between attempts to decode (default is 500ms)\r\n     */\n    this.timeBetweenScans = 500;\n    /**\r\n     * Delay between successful decode (default is 500ms)\r\n     */\n    this.delayBetweenScanSuccess = 500;\n    /**\r\n     * How the preview element should be fit inside the :host container.\r\n     */\n    this.previewFitMode = 'cover';\n    /**\r\n     * Url of the HTML video poster\r\n     */\n    this.poster = '';\n    this._ready = false;\n    // instance based emitters\n    this.autostarted = new EventEmitter();\n    this.autostarting = new EventEmitter();\n    this.torchCompatible = new EventEmitter(false);\n    this.scanSuccess = new EventEmitter();\n    this.scanFailure = new EventEmitter();\n    this.scanError = new EventEmitter();\n    this.scanComplete = new EventEmitter();\n    this.camerasFound = new EventEmitter();\n    this.camerasNotFound = new EventEmitter();\n    this.permissionResponse = new EventEmitter(true);\n    this.hasDevices = new EventEmitter();\n    this.deviceChange = new EventEmitter();\n    this._enabled = true;\n    this._hints = new Map();\n    this.autofocusEnabled = true;\n    this.autostart = true;\n    this.formats = [BarcodeFormat.QR_CODE];\n    // computed data\n    this.hasNavigator = typeof navigator !== 'undefined';\n    this.isMediaDevicesSupported = this.hasNavigator && !!navigator.mediaDevices;\n  }\n  /**\r\n   * Gets and registers all cameras.\r\n   */\n  async askForPermission() {\n    if (!this.hasNavigator) {\n      console.error('@zxing/ngx-scanner', 'Can\\'t ask permission, navigator is not present.');\n      this.setPermission(null);\n      return this.hasPermission;\n    }\n    if (!this.isMediaDevicesSupported) {\n      console.error('@zxing/ngx-scanner', 'Can\\'t get user media, this is not supported.');\n      this.setPermission(null);\n      return this.hasPermission;\n    }\n    let stream;\n    let permission;\n    try {\n      // Will try to ask for permission\n      stream = await this.getAnyVideoDevice();\n      permission = !!stream;\n    } catch (err) {\n      return this.handlePermissionException(err);\n    } finally {\n      this.terminateStream(stream);\n    }\n    this.setPermission(permission);\n    // Returns the permission\n    return permission;\n  }\n  /**\r\n   *\r\n   */\n  getAnyVideoDevice() {\n    return navigator.mediaDevices.getUserMedia({\n      video: true\n    });\n  }\n  /**\r\n   * Terminates a stream and it's tracks.\r\n   */\n  terminateStream(stream) {\n    if (stream) {\n      stream.getTracks().forEach(t => t.stop());\n    }\n    stream = undefined;\n  }\n  async init() {\n    if (!this.autostart) {\n      console.warn('Feature \\'autostart\\' disabled. Permissions and devices recovery has to be run manually.');\n      // does the necessary configuration without autostarting\n      this.initAutostartOff();\n      this._ready = true;\n      return;\n    }\n    // configures the component and starts the scanner\n    await this.initAutostartOn();\n    this._ready = true;\n  }\n  /**\r\n   * Initializes the component without starting the scanner.\r\n   */\n  initAutostartOff() {\n    // do not ask for permission when autostart is off\n    this.isAutostarting = false;\n    // just update devices information\n    this.updateVideoInputDevices();\n    if (this._device && this._devicePreStart) {\n      this.setDevice(this._devicePreStart);\n    }\n  }\n  /**\r\n   * Initializes the component and starts the scanner.\r\n   * Permissions are asked to accomplish that.\r\n   */\n  async initAutostartOn() {\n    this.isAutostarting = true;\n    let hasPermission;\n    try {\n      // Asks for permission before enumerating devices so it can get all the device's info\n      hasPermission = await this.askForPermission();\n    } catch (e) {\n      console.error('Exception occurred while asking for permission:', e);\n      return;\n    }\n    // from this point, things gonna need permissions\n    if (hasPermission) {\n      const devices = await this.updateVideoInputDevices();\n      await this.autostartScanner([...devices]);\n    }\n    this.isAutostarting = false;\n    this.autostarted.next();\n  }\n  /**\r\n   * Checks if the given device is the current defined one.\r\n   */\n  isCurrentDevice(device) {\n    return device?.deviceId === this._device?.deviceId;\n  }\n  /**\r\n   * Executes some actions before destroy the component.\r\n   */\n  ngOnDestroy() {\n    this.reset();\n    BrowserCodeReader.cleanVideoSource(this.previewElemRef.nativeElement);\n    BrowserMultiFormatContinuousReader.releaseAllStreams();\n  }\n  /**\r\n   *\r\n   */\n  ngOnInit() {\n    this.init();\n  }\n  /**\r\n   * Stops the scanning, if any.\r\n   */\n  scanStop() {\n    if (this._scanSubscription) {\n      this.codeReader?.getScannerControls().stop();\n      this._scanSubscription?.unsubscribe();\n      this._scanSubscription = undefined;\n    }\n    this.torchCompatible.next(false);\n  }\n  /**\r\n   * Stops the scanning, if any.\r\n   */\n  scanStart() {\n    if (this._scanSubscription) {\n      throw new Error('There is already a scan process running.');\n    }\n    if (!this._device) {\n      throw new Error('No device defined, cannot start scan, please define a device.');\n    }\n    this.scanFromDevice(this._device.deviceId);\n  }\n  /**\r\n   * Stops old `codeReader` and starts scanning in a new one.\r\n   */\n  restart() {\n    // note only necessary for now because of the Torch\n    this._codeReader = undefined;\n    const prevDevice = this._reset();\n    if (!prevDevice) {\n      return;\n    }\n    this.device = prevDevice;\n  }\n  /**\r\n   * Discovers and updates known video input devices.\r\n   */\n  async updateVideoInputDevices() {\n    // permissions aren't needed to get devices, but to access them and their info\n    const devices = (await BrowserCodeReader.listVideoInputDevices()) || [];\n    const hasDevices = devices && devices.length > 0;\n    // stores discovered devices and updates information\n    this.hasDevices.next(hasDevices);\n    this.camerasFound.next([...devices]);\n    if (!hasDevices) {\n      this.camerasNotFound.next(null);\n    }\n    return devices;\n  }\n  /**\r\n   * Starts the scanner with the back camera otherwise take the last\r\n   * available device.\r\n   */\n  async autostartScanner(devices) {\n    const matcher = ({\n      label\n    }) => /back|trás|rear|traseira|environment|ambiente/gi.test(label);\n    // select the rear camera by default, otherwise take the last camera.\n    const device = devices.find(matcher) || devices.pop();\n    if (!device) {\n      throw new Error('Impossible to autostart, no input devices available.');\n    }\n    await this.setDevice(device);\n    this.deviceChange.next(device);\n  }\n  /**\r\n   * Dispatches the scan success event.\r\n   *\r\n   * @param result the scan result.\r\n   */\n  dispatchScanSuccess(result) {\n    this.scanSuccess.next(result.getText());\n  }\n  /**\r\n   * Dispatches the scan failure event.\r\n   */\n  dispatchScanFailure(reason) {\n    this.scanFailure.next(reason);\n  }\n  /**\r\n   * Dispatches the scan error event.\r\n   *\r\n   * @param error the error thing.\r\n   */\n  dispatchScanError(error) {\n    if (!this.scanError.observed) {\n      console.error(`zxing scanner component: ${error.name}`, error);\n      console.warn('Use the `(scanError)` property to handle errors like this!');\n    }\n    this.scanError.next(error);\n  }\n  /**\r\n   * Dispatches the scan event.\r\n   *\r\n   * @param result the scan result.\r\n   */\n  dispatchScanComplete(result) {\n    this.scanComplete.next(result);\n  }\n  /**\r\n   * Returns the filtered permission.\r\n   */\n  handlePermissionException(err) {\n    // failed to grant permission to video input\n    console.error('@zxing/ngx-scanner', 'Error when asking for permission.', err);\n    let permission;\n    switch (err.name) {\n      // usually caused by not secure origins\n      case 'NotSupportedError':\n        console.warn('@zxing/ngx-scanner', err.message);\n        // could not claim\n        permission = null;\n        // can't check devices\n        this.hasDevices.next(null);\n        break;\n      // user denied permission\n      case 'NotAllowedError':\n        console.warn('@zxing/ngx-scanner', err.message);\n        // claimed and denied permission\n        permission = false;\n        // this means that input devices exists\n        this.hasDevices.next(true);\n        break;\n      // the device has no attached input devices\n      case 'NotFoundError':\n        console.warn('@zxing/ngx-scanner', err.message);\n        // no permissions claimed\n        permission = null;\n        // because there was no devices\n        this.hasDevices.next(false);\n        // tells the listener about the error\n        this.camerasNotFound.next(err);\n        break;\n      case 'NotReadableError':\n        console.warn('@zxing/ngx-scanner', 'Couldn\\'t read the device(s)\\'s stream, it\\'s probably in use by another app.');\n        // no permissions claimed\n        permission = null;\n        // there are devices, which I couldn't use\n        this.hasDevices.next(false);\n        // tells the listener about the error\n        this.camerasNotFound.next(err);\n        break;\n      default:\n        console.warn('@zxing/ngx-scanner', 'I was not able to define if I have permissions for camera or not.', err);\n        // unknown\n        permission = null;\n        // this.hasDevices.next(undefined;\n        break;\n    }\n    this.setPermission(permission);\n    // tells the listener about the error\n    this.permissionResponse.error(err);\n    return permission;\n  }\n  /**\r\n   * Returns a valid BarcodeFormat or fails.\r\n   */\n  getBarcodeFormatOrFail(format) {\n    return typeof format === 'string' ? BarcodeFormat[format.trim().toUpperCase()] : format;\n  }\n  /**\r\n   * Return a code reader, create one if non exist\r\n   */\n  getCodeReader() {\n    if (!this._codeReader) {\n      const options = {\n        delayBetweenScanAttempts: this.timeBetweenScans,\n        delayBetweenScanSuccess: this.delayBetweenScanSuccess\n      };\n      this._codeReader = new BrowserMultiFormatContinuousReader(this.hints, options);\n    }\n    return this._codeReader;\n  }\n  /**\r\n   * Starts the continuous scanning for the given device.\r\n   *\r\n   * @param deviceId The deviceId from the device.\r\n   */\n  async scanFromDevice(deviceId) {\n    const videoElement = this.previewElemRef.nativeElement;\n    const codeReader = this.getCodeReader();\n    const scanStream = await codeReader.scanFromDeviceObservable(deviceId, videoElement);\n    if (!scanStream) {\n      throw new Error('Undefined decoding stream, aborting.');\n    }\n    const next = x => this._onDecodeResult(x.result, x.error);\n    const error = err => this._onDecodeError(err);\n    const complete = () => {};\n    this._scanSubscription = scanStream.subscribe(next, error, complete);\n    if (this._scanSubscription.closed) {\n      return;\n    }\n    const controls = codeReader.getScannerControls();\n    const hasTorchControl = typeof controls.switchTorch !== 'undefined';\n    this.torchCompatible.next(hasTorchControl);\n  }\n  /**\r\n   * Handles decode errors.\r\n   */\n  _onDecodeError(err) {\n    this.dispatchScanError(err);\n    // this.reset();\n  }\n  /**\r\n   * Handles decode results.\r\n   */\n  _onDecodeResult(result, error) {\n    if (result) {\n      this.dispatchScanSuccess(result);\n    } else {\n      this.dispatchScanFailure(error);\n    }\n    this.dispatchScanComplete(result);\n  }\n  /**\r\n   * Stops the code reader and returns the previous selected device.\r\n   */\n  _reset() {\n    if (!this._codeReader) {\n      return;\n    }\n    // clearing codeReader first to prevent setOptions error appearing in several Chromium versions\n    this._codeReader = undefined;\n    const device = this._device;\n    // do not set this.device inside this method, it would create a recursive loop\n    this.device = undefined;\n    return device;\n  }\n  /**\r\n   * Resets the scanner and emits device change.\r\n   */\n  reset() {\n    this._reset();\n    this.deviceChange.emit(null);\n  }\n  /**\r\n   * Sets the current device.\r\n   */\n  async setDevice(device) {\n    // instantly stops the scan before changing devices\n    this.scanStop();\n    // correctly sets the new (or none) device\n    this._device = device || undefined;\n    if (!this._device) {\n      // cleans the video because user removed the device\n      BrowserCodeReader.cleanVideoSource(this.previewElemRef.nativeElement);\n    }\n    // if enabled, starts scanning\n    if (this._enabled && device) {\n      await this.scanFromDevice(device.deviceId);\n    }\n  }\n  /**\r\n   * Sets the permission value and emits the event.\r\n   */\n  setPermission(hasPermission) {\n    this.hasPermission = hasPermission;\n    this.permissionResponse.next(hasPermission);\n  }\n  static {\n    this.ɵfac = function ZXingScannerComponent_Factory(t) {\n      return new (t || ZXingScannerComponent)();\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: ZXingScannerComponent,\n      selectors: [[\"zxing-scanner\"]],\n      viewQuery: function ZXingScannerComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c0, 7);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.previewElemRef = _t.first);\n        }\n      },\n      inputs: {\n        autofocusEnabled: \"autofocusEnabled\",\n        timeBetweenScans: \"timeBetweenScans\",\n        delayBetweenScanSuccess: \"delayBetweenScanSuccess\",\n        autostart: \"autostart\",\n        previewFitMode: \"previewFitMode\",\n        poster: \"poster\",\n        device: \"device\",\n        formats: \"formats\",\n        videoConstraints: \"videoConstraints\",\n        torch: \"torch\",\n        enable: \"enable\",\n        tryHarder: \"tryHarder\"\n      },\n      outputs: {\n        autostarted: \"autostarted\",\n        autostarting: \"autostarting\",\n        torchCompatible: \"torchCompatible\",\n        scanSuccess: \"scanSuccess\",\n        scanFailure: \"scanFailure\",\n        scanError: \"scanError\",\n        scanComplete: \"scanComplete\",\n        camerasFound: \"camerasFound\",\n        camerasNotFound: \"camerasNotFound\",\n        permissionResponse: \"permissionResponse\",\n        hasDevices: \"hasDevices\",\n        deviceChange: \"deviceChange\"\n      },\n      decls: 6,\n      vars: 3,\n      consts: [[\"preview\", \"\"], [3, \"poster\"]],\n      template: function ZXingScannerComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"video\", 1, 0)(2, \"p\");\n          i0.ɵɵtext(3, \" Your browser does not support this feature, please try to upgrade it. \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"p\");\n          i0.ɵɵtext(5, \" Seu navegador n\\xE3o suporta este recurso, por favor tente atualiz\\xE1-lo. \");\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵstyleProp(\"object-fit\", ctx.previewFitMode);\n          i0.ɵɵproperty(\"poster\", ctx.poster, i0.ɵɵsanitizeUrl);\n        }\n      },\n      styles: [\"[_nghost-%COMP%]{display:block}video[_ngcontent-%COMP%]{width:100%;height:auto;object-fit:contain}\"],\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ZXingScannerComponent, [{\n    type: Component,\n    args: [{\n      selector: 'zxing-scanner',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: \"<video #preview [style.object-fit]=\\\"previewFitMode\\\" [poster]=\\\"poster\\\">\\n  <p>\\n    Your browser does not support this feature, please try to upgrade it.\\n  </p>\\n  <p>\\n    Seu navegador n\\u00E3o suporta este recurso, por favor tente atualiz\\u00E1-lo.\\n  </p>\\n</video>\\n\",\n      styles: [\":host{display:block}video{width:100%;height:auto;object-fit:contain}\\n\"]\n    }]\n  }], () => [], {\n    previewElemRef: [{\n      type: ViewChild,\n      args: ['preview', {\n        static: true\n      }]\n    }],\n    autofocusEnabled: [{\n      type: Input\n    }],\n    timeBetweenScans: [{\n      type: Input\n    }],\n    delayBetweenScanSuccess: [{\n      type: Input\n    }],\n    autostarted: [{\n      type: Output\n    }],\n    autostarting: [{\n      type: Output\n    }],\n    autostart: [{\n      type: Input\n    }],\n    previewFitMode: [{\n      type: Input\n    }],\n    poster: [{\n      type: Input\n    }],\n    torchCompatible: [{\n      type: Output\n    }],\n    scanSuccess: [{\n      type: Output\n    }],\n    scanFailure: [{\n      type: Output\n    }],\n    scanError: [{\n      type: Output\n    }],\n    scanComplete: [{\n      type: Output\n    }],\n    camerasFound: [{\n      type: Output\n    }],\n    camerasNotFound: [{\n      type: Output\n    }],\n    permissionResponse: [{\n      type: Output\n    }],\n    hasDevices: [{\n      type: Output\n    }],\n    device: [{\n      type: Input\n    }],\n    deviceChange: [{\n      type: Output\n    }],\n    formats: [{\n      type: Input\n    }],\n    videoConstraints: [{\n      type: Input\n    }],\n    torch: [{\n      type: Input\n    }],\n    enable: [{\n      type: Input\n    }],\n    tryHarder: [{\n      type: Input\n    }]\n  });\n})();\nclass ZXingScannerModule {\n  static {\n    this.ɵfac = function ZXingScannerModule_Factory(t) {\n      return new (t || ZXingScannerModule)();\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: ZXingScannerModule,\n      declarations: [ZXingScannerComponent],\n      imports: [CommonModule, FormsModule],\n      exports: [ZXingScannerComponent]\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      imports: [CommonModule, FormsModule]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ZXingScannerModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, FormsModule],\n      declarations: [ZXingScannerComponent],\n      exports: [ZXingScannerComponent]\n    }]\n  }], null, null);\n})();\n\n/*\r\n * Public API Surface of zxing-scanner\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { ZXingScannerComponent, ZXingScannerModule };\n"],
  "mappings": "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",
  "names": ["d", "b", "HTMLCanvasElementLuminanceSource", "BrowserCodeReader", "_a", "__extends", "d", "b", "BrowserAztecCodeReader", "__extends", "d", "b", "BrowserMultiFormatOneDReader", "__extends", "d", "b", "BrowserDatamatrixCodeReader", "__extends", "d", "b", "BrowserMultiFormatReader", "__extends", "d", "b", "BrowserPDF417Reader", "__extends", "d", "b", "BrowserQRCodeReader", "BrowserCodeSvgWriter", "svgNs", "BrowserQRCodeSvgWriter"]
}
